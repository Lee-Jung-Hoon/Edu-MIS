<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="talk.dao.TalkMapper">

	<!-- 읽지 않은 쪽지 리스트 받아오기 -->
	<select id="getReceiveList" parameterType="int" resultType="TalkVO">
		select tt.no as no,  tm.name name, to_char(tt.send_date, 'yy/mm/dd HH24:mi') as sendDate, tt.content as content
		from t_talk tt, t_member tm
		where tt.receive_member_no = #{no}
  			   and del_yn = 'n'
 			   and tt.check_yn = 'n'
 			   and tm.no = tt.send_member_no
 		order by no desc
	</select>
	
	<!-- 체크 여부 y로 바꾸기 -->
	<update id="setCheck" parameterType="int">
		update t_talk
		set check_yn = 'y'
		where no = #{no}
	</update>
	
	<!-- 글 등록시 글번호에 대한 보낸 사람 번호, 부모 넘버를 받아오기 -->
	<select id="getNo" parameterType="int" resultType="TalkVO">
		select send_member_no as sendMemberNo , p_no as pNo
		from t_talk
		where no = #{no}
	</select>

	<!-- 글 등록하기 no는 시퀀스 부모는 글번호의 부모, 보낸 사람은 보낸사람 번호 -->
	<insert id="registTalk" parameterType="TalkVO">
		insert into t_talk (no,	p_no, send_member_no, receive_member_no, content)
		values ( seq_t_talk_no.nextVal, #{pNo}, #{sendMemberNo}, #{receiveMemberNo}, #{content} )
	</insert>


	<!-- 회원목록 뽑아오기 (강사님이 로그인 할 때만 사용), 강사님꺼 제외하고 뽑아옴 (쿼리 수정해야 함!) -->
	<select id="getMember" parameterType="int" resultType="memberVO">
		select no, id, name
		from t_member 
		where no != #{no}
	</select>
	
	<!-- 시퀀스 값 가져오기 -->
	<select id="getSeq" resultType="int">
		select seq_t_talk_no.nextVal
		from dual
	</select>

	<!-- 새글 작성하기 -->
	<insert id="registNewTalk" parameterType="TalkVO">
		insert into t_talk
		(no, p_no, send_member_no, receive_member_no, content)
		values (
		#{no}, #{pNo}, #{sendMemberNo}, #{receiveMemberNo},	#{content} )
	</insert>
	
	<!-- 게시판 목록을 처리하는 쿼리  받은쪽지함 -->
	<select id="selectReceiveTalkList" parameterType="int" resultType="TalkVO">
		 select tt.content content, to_char(tt.send_date, 'yyyy-mm-dd hh24:mi')as sendDate, tt.receive_member_no receiveMemberNo,
		        tt.check_yn checkYN, tm.name name, tt.no no, tt.send_member_no sendMemberNo
		   from t_talk tt, t_member tm
		  where tt.receive_member_no = #{no} and tt.receive_del = 'n'            
		  and tm.no = tt.send_member_no
		   order by no desc
	</select>
	
	<!-- 게시판 목록을 처리하는 쿼리  보낸쪽지함 -->
	<select id="selectSendTalkList" parameterType="int" resultType="TalkVO">
		 select tt.content content, to_char(tt.send_date, 'yyyy-mm-dd hh24:mi')as sendDate, 
		        tt.check_yn checkYN, tm.name name, tt.no no, tt.p_no pNo
		   from t_talk tt, t_member tm
		  where tt.send_member_no = #{no} and tt.send_del = 'n'                         
		  and tm.no = tt.receive_member_no
		   order by no desc
	</select>
	
	<!-- talk 상세정보 쿼리 -->
	<select id="selectDetailTalk" parameterType="int" resultType="TalkVO">
		 select content, to_char(send_date, 'yyyy-mm-dd hh24:mi')as sendDate
		   from t_talk
		  where no = #{tNo}                        
	</select>
	
	<!-- talk insert하는 쿼리 -->
	<insert id="insertSendTalk" parameterType="TalkVO">
		 insert into t_talk (no, p_no, send_member_no, receive_member_no, content)
		 		values (seq_t_talk_no.nextval, #{pNo}, #{receiveMemberNo}, #{sendMemberNo},  #{content} )                       
	</insert>
	
	<update id="changeCheck" parameterType="int">
		update t_talk
		   set check_yn = 'y'
		 where no = #{tNo}
	</update>
	
	<!--받은쪽지함 내용 검색 쿼리 -->
	<select id="searchTalk" parameterType="TalkVO" resultType="TalkVO">
		select tt.content content, to_char(tt.send_date, 'yyyy-mm-dd hh24:mi')as sendDate, tt.receive_member_no receiveMemberNo,
		        tt.check_yn checkYN, tm.name name, tt.no no, tt.send_member_no sendMemberNo
		  from t_talk tt, t_member tm
		 where tt.content like '%' || #{content} || '%' and tt.receive_member_no = #{no}
		   and tm.no = tt.send_member_no and tt.receive_del = 'n'
		  order by no desc
	</select>
	
	<!--받은쪽지함 이름 검색 쿼리 -->
	<select id="searchNameTalk" parameterType="TalkVO" resultType="TalkVO">
		select tt.content content, to_char(tt.send_date, 'yyyy-mm-dd hh24:mi')as sendDate, tt.receive_member_no receiveMemberNo,
		        tt.check_yn checkYN, tm.name name, tt.no no, tt.send_member_no sendMemberNo
		  from t_talk tt, t_member tm
		 where tm.name like '%' || #{content} || '%' and tt.receive_member_no = #{no}
		   and tm.no = tt.send_member_no and tt.receive_del = 'n'
		  order by no desc
	</select>
	
	<!--보낸쪽지함 내용 검색 쿼리 -->
	<select id="searchTalk2" parameterType="TalkVO" resultType="TalkVO">
		select tt.content content, to_char(tt.send_date, 'yyyy-mm-dd hh24:mi')as sendDate, tt.receive_member_no receiveMemberNo,
		        tt.check_yn checkYN, tm.name name, tt.no no, tt.send_member_no sendMemberNo
		  from t_talk tt, t_member tm
		 where tt.content like '%' || #{content} || '%' and tt.send_member_no = #{no}
		   and tm.no = tt.receive_member_no and tt.send_del = 'n'
		  order by no desc
	</select>
	
	<!--보낸쪽지함 이름 검색 쿼리 -->
	<select id="searchNameTalk2" parameterType="TalkVO" resultType="TalkVO">
		select tt.content content, to_char(tt.send_date, 'yyyy-mm-dd hh24:mi')as sendDate, tt.receive_member_no receiveMemberNo,
		        tt.check_yn checkYN, tm.name name, tt.no no, tt.send_member_no sendMemberNo
		  from t_talk tt, t_member tm
		 where tm.name like '%' || #{content} || '%' and tt.send_member_no = #{no}
		   and tm.no = tt.receive_member_no and tt.send_del = 'n'
		  order by no desc
	</select>
	
		<!-- 게시판 목록을 처리하는 쿼리  휴지통 -->
	<select id="talkTrash" parameterType="int" resultType="TalkVO">
		 select tt.content content, to_char(tt.send_date, 'yyyy-mm-dd hh24:mi')as sendDate, tt.receive_member_no receiveMemberNo,
		        tt.check_yn checkYN, tm.name name, tt.no no, tt.send_member_no sendMemberNo
		   from t_talk tt, t_member tm
		  where tt.receive_member_no = #{no} and tt.receive_del = 't'            
		  and tm.no = tt.send_member_no
		   order by no desc
	</select>
	
	<update id="deleteCheckTalk" parameterType="TalkVO">
	    update t_talk  set ${name} = 't'  where no = #{no}
	</update>
	<update id="deleteTalk" parameterType="int">
		update t_talk set receive_del = 't' where no = #{no}
	</update>
	<update id="realDeleteCheckTalk" parameterType="int">
		update t_talk set receive_del = 'y' where no = #{tNo}
	</update>
	<update id="reviveCheckTalk" parameterType="int">
		update t_talk set receive_del = 'n' where no = #{tNo}
	</update>
	  
</mapper>